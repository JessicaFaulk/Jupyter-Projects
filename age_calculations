3  Formulas
3.1  Days between two dates (Calender Days)
This requires that both values are dates or datetimes.
Calculations assume all values are in the same timezone (CST) unless otherwise specified
3.1.1  Useful packages to calculate the date
import pandas as pd
import numpy as np
import datetime
from dateutil.relativedelta import relativedelta
from datetime import date
3.1.2  Creating a random DataFrame for the example
W
date1 = pd.Series(pd.date_range('2019-01-26', periods = 7, freq = 'W'))
date2 = pd.Series(pd.date_range('2021-11-26', periods = 7, freq = 'W'))
date_df = pd.DataFrame(dict(Start_date = date1, End_date = date2))
3.1.2.1  Days
date_df['diff_days'] = date_df['End_date'] - date_df['Start_date']
# Find the difference of the days and add that to the data frame as column 'diff_days'
date_df['diff_days'] = date_df['End_date'] - date_df['Start_date']
​
date_df
Start_date	End_date	diff_days
0	2019-01-27	2021-11-28	1036 days
1	2019-02-03	2021-12-05	1036 days
2	2019-02-10	2021-12-12	1036 days
3	2019-02-17	2021-12-19	1036 days
4	2019-02-24	2021-12-26	1036 days
5	2019-03-03	2022-01-02	1036 days
6	2019-03-10	2022-01-09	1036 days
date_df
# converts the difference into weeks
date_df['diff_weeks'] = date_df['diff_days'] / np.timedelta64(1, 'D')
​
date_df
Start_date	End_date	diff_days	diff_weeks
0	2019-01-27	2021-11-28	1036 days	1036.0
1	2019-02-03	2021-12-05	1036 days	1036.0
2	2019-02-10	2021-12-12	1036 days	1036.0
3	2019-02-17	2021-12-19	1036 days	1036.0
4	2019-02-24	2021-12-26	1036 days	1036.0
5	2019-03-03	2022-01-02	1036 days	1036.0
6	2019-03-10	2022-01-09	1036 days	1036.0
3.1.2.2  Weeks
# converts the difference into weeks
date_df['diff_weeks'] = date_df['diff_days'] / np.timedelta64(1, 'W')
# converts the difference into weeks
date_df['diff_weeks'] = date_df['diff_days'] / np.timedelta64(1, 'W')
​
date_df
Start_date	End_date	diff_days	diff_weeks
0	2019-01-27	2021-11-28	1036 days	148.0
1	2019-02-03	2021-12-05	1036 days	148.0
2	2019-02-10	2021-12-12	1036 days	148.0
3	2019-02-17	2021-12-19	1036 days	148.0
4	2019-02-24	2021-12-26	1036 days	148.0
5	2019-03-03	2022-01-02	1036 days	148.0
6	2019-03-10	2022-01-09	1036 days	148.0
3.1.2.3  Years
date_df['diff_years'] = date_df['diff_days'] / np.timedelta64(1, 'Y')

date_df
# converts the difference into years
date_df['diff_years'] = date_df['diff_days'] / np.timedelta64(1, 'Y')
​
date_df
Start_date	End_date	diff_days	diff_weeks	diff_years
0	2019-01-27	2021-11-28	1036 days	148.0	2.836472
1	2019-02-03	2021-12-05	1036 days	148.0	2.836472
2	2019-02-10	2021-12-12	1036 days	148.0	2.836472
3	2019-02-17	2021-12-19	1036 days	148.0	2.836472
4	2019-02-24	2021-12-26	1036 days	148.0	2.836472
5	2019-03-03	2022-01-02	1036 days	148.0	2.836472
6	2019-03-10	2022-01-09	1036 days	148.0	2.836472
3.1.3  Notes
Note that all the TimeDeltas are NOT in integers.

Let's add a column to the DataFrame and show how we expect to calculate the age.

#Using the same set up as before
​
bday = pd.Series(pd.date_range('1988-11-26 19:22:00', periods = 7, freq = 'W'))
​
​
date_df = pd.concat([date_df, bday.rename('birthday')], axis = 1)
​
date_df
​
Start_date	End_date	diff_days	diff_weeks	diff_years	birthday
0	2019-01-27	2021-11-28	1036 days	148.0	2.836472	1988-11-27 19:22:00
1	2019-02-03	2021-12-05	1036 days	148.0	2.836472	1988-12-04 19:22:00
2	2019-02-10	2021-12-12	1036 days	148.0	2.836472	1988-12-11 19:22:00
3	2019-02-17	2021-12-19	1036 days	148.0	2.836472	1988-12-18 19:22:00
4	2019-02-24	2021-12-26	1036 days	148.0	2.836472	1988-12-25 19:22:00
5	2019-03-03	2022-01-02	1036 days	148.0	2.836472	1989-01-01 19:22:00
6	2019-03-10	2022-01-09	1036 days	148.0	2.836472	1989-01-08 19:22:00
# 
# appending "(np.floor)" and "astype(int)" 
# changes the float value to an integer of the closest integer without going over. 
​
date_df['diff_days'] = date_df['End_date'] - date_df['birthday']
​
date_df['age'] = ((date_df['diff_days'] / np.timedelta64(1, 'Y')).apply(np.floor)).astype(int)
​
date_df
Start_date	End_date	diff_days	diff_weeks	diff_years	birthday	age
0	2019-01-27	2021-11-28	12053 days 04:38:00	148.0	2.836472	1988-11-27 19:22:00	33
1	2019-02-03	2021-12-05	12053 days 04:38:00	148.0	2.836472	1988-12-04 19:22:00	33
2	2019-02-10	2021-12-12	12053 days 04:38:00	148.0	2.836472	1988-12-11 19:22:00	33
3	2019-02-17	2021-12-19	12053 days 04:38:00	148.0	2.836472	1988-12-18 19:22:00	33
4	2019-02-24	2021-12-26	12053 days 04:38:00	148.0	2.836472	1988-12-25 19:22:00	33
5	2019-03-03	2022-01-02	12053 days 04:38:00	148.0	2.836472	1989-01-01 19:22:00	33
6	2019-03-10	2022-01-09	12053 days 04:38:00	148.0	2.836472	1989-01-08 19:22:00	33
​
